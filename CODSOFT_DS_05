import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix
from sklearn.utils import resample

file_path = '/mnt/data/creditcard.csv'
data = pd.read_csv(file_path)

scaler = StandardScaler()
data['Amount'] = scaler.fit_transform(data['Amount'].values.reshape(-1, 1))
data['Time'] = scaler.fit_transform(data['Time'].values.reshape(-1, 1))

data_majority = data[data.Class == 0]
data_minority = data[data.Class == 1]

data_majority_downsampled = resample(data_majority,
                                     replace=False,
                                     n_samples=len(data_minority),
                                     random_state=42)

data_balanced = pd.concat([data_majority_downsampled, data_minority])

X = data_balanced.drop(columns=['Class'])
y = data_balanced['Class']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

logreg = LogisticRegression()
logreg.fit(X_train, y_train)
y_pred_logreg = logreg.predict(X_test)

rf = RandomForestClassifier()
rf.fit(X_train, y_train)
y_pred_rf = rf.predict(X_test)

logreg_report = classification_report(y_test, y_pred_logreg, output_dict=True)
rf_report = classification_report(y_test, y_pred_rf, output_dict=True)

logreg_cm = confusion_matrix(y_test, y_pred_logreg)
rf_cm = confusion_matrix(y_test, y_pred_rf)

print("Logistic Regression Performance:")
print(classification_report(y_test, y_pred_logreg))
print(confusion_matrix(y_test, y_pred_logreg))

print("Random Forest Performance:")
print(classification_report(y_test, y_pred_rf))
print(confusion_matrix(y_test, y_pred_rf))
